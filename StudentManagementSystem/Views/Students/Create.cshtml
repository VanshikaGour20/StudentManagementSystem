@model StudentManagementSystem.Models.Student

@{
    ViewBag.Title = "Create Student";
}

<h2>Create Student</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(m => m.fullName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.fullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.fullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.rollNo, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.rollNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.rollNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.dateOfBirth, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.dateOfBirth, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(m => m.dateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.gender, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.gender, new SelectList(new[] { "Male", "Female", "Other" }), "Select Gender", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.course, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.course, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.course, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.email, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.email, new { htmlAttributes = new { @class = "form-control", type = "email" } })
                @Html.ValidationMessageFor(m => m.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.phone, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.phone, new { htmlAttributes = new { @class = "form-control", type = "tel" } })
                @Html.ValidationMessageFor(m => m.phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}
